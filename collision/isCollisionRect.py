from collision.isCorrectRect import isCorrectRect # импортируем функцию isCorrectRect для проверки корректности прямоугольника
# определяем пользовательский класс исключений для некорректных прямоугольников
class RectCorrectError(Exception):
    pass
def isCollisionRect(rect1, rect2):
    # проверяет пересечение двух прямоугольников
    # rect1 (list) - первый прямоугольник, заданный списком из двух кортежей координат
    # rect2 (list) - второй прямоугольник, заданный списком из двух кортежей координат
    # возвращает True, если прямоугольники пересекаются, иначе False
    # если прямоугольник некорректен, функция вызывает ошибку RectCorrectError
    # проверка корректности первого прямоугольника
    if not isCorrectRect(rect1):
        raise RectCorrectError("1й прямоугольник некоректный")
    # проверка корректности второго прямоугольника
    if not isCorrectRect(rect2):
        raise RectCorrectError("2й прямоугольник некоректный")
    # распаковка координат левого нижнего и верхнего правого углов первого прямоугольника
    (x1_min, y1_min), (x1_max, y1_max) = rect1
    # распаковка координат левого нижнего и верхнего правого углов второго прямоугольника
    (x2_min, y2_min), (x2_max, y2_max) = rect2
    # Проверка пересечения прямоугольников: 
    # Мы проверяем четыре условия для двух прямоугольников: 
    # 1. Если максимальная координата x первого прямоугольника (x1_max) меньше минимальной координаты x второго прямоугольника (x2_min), это означает, что первый прямоугольник полностью находится левее второго, и они не пересекаются. 
    # 2. Если максимальная координата x второго прямоугольника (x2_max) меньше минимальной координаты x первого прямоугольника (x1_min), это означает, что второй прямоугольник полностью находится левее первого, и они не пересекаются. 
    # 3. Если максимальная координата y первого прямоугольника (y1_max) меньше минимальной координаты y второго прямоугольника (y2_min), это означает, что первый прямоугольник полностью находится ниже второго, и они не пересекаются. 
    # 4. Если максимальная координата y второго прямоугольника (y2_max) меньше минимальной координаты y первого прямоугольника (y1_min), это означает, что второй прямоугольник полностью находится ниже первого, и они не пересекаются. 
    # 5. Если ни одно из этих условий не выполняется, значит, прямоугольники пересекаются.
    return not (x1_max < x2_min or x2_max < x1_min or y1_max < y2_min or y2_max < y1_min)