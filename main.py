# импортируем функции из модуля collision
from collision.isCorrectRect import isCorrectRect  # проверка корректности координат прямоугольника
from collision.isCollisionRect import isCollisionRect  # проверка пересечения двух прямоугольников
from collision.intersectionAreaRect import intersectionAreaRect  # вычисление площади пересечения двух прямоугольников
from collision.intersectionAreaMultiRect import intersectionAreaMultiRect  # вычисление общей площади пересечения нескольких прямоугольников
def main():
    # проверка корректности прямоугольника
    print("=== Проверка корректности прямоугольника ===")
    coords = [(1, 1), (4, 5)]  # пример координат прямоугольника
    # вызов функции isCorrectRect для проверки корректности введенных координат
    print(f"Корректность прямоугольника: {isCorrectRect(coords)}")
    # проверка пересечения прямоугольников
    print("\n=== Проверка пересечения прямоугольников ===")
    rect1 = [(1, 1), (4, 5)]  # координаты первого прямоугольника
    rect2 = [(2, 2), (6, 7)]  # координаты второго прямоугольника
    try:
        # вызов функции isCollisionRect для проверки пересечения двух прямоугольников
        print(f"Пересечение прямоугольников: {isCollisionRect(rect1, rect2)}")
    except ValueError as e:
        # обработка ошибки, если координаты одного из прямоугольников некорректны
        print(e)
    # вычисление площади пересечения прямоугольников
    print("\n=== Площадь пересечения прямоугольников ===")
    rect1 = [(1, 1), (4, 5)]  # координаты первого прямоугольника
    rect2 = [(2, 2), (6, 7)]  # координаты второго прямоугольника
    try:
        # вызов функции intersectionAreaRect для вычисления площади пересечения двух прямоугольников
        print(f"Площадь пересечения: {intersectionAreaRect(rect1, rect2)}")
    except ValueError as e:
        # обработка ошибки, если координаты одного из прямоугольников некорректны
        print(e)
    # вычисление общей площади пересечения нескольких прямоугольников
    print("\n=== Общая площадь пересечения нескольких прямоугольников ===")
    rectangles = [
        [(1, 1), (4, 5)],  # координаты первого прямоугольника
        [(2, 2), (6, 7)],  # координаты второго прямоугольника
        [(3, 3), (5, 6)]   # координаты третьего прямоугольника
    ]
    try:
        # вызов функции intersectionAreaMultiRect для вычисления общей площади пересечения нескольких прямоугольников
        print(f"Общая площадь пересечения: {intersectionAreaMultiRect(rectangles)}")
    except ValueError as e:
        # обработка ошибки, если координаты одного из прямоугольников некорректны
        print(e)
# основная точка входа в программу
if __name__ == "__main__": # проверяем, выполняется ли скрипт напрямую или импортируется как модуль в другой программе
    main() # вызов основной функции main для выполнения программы